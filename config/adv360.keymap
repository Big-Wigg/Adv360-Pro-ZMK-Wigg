#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        AC_FRO: AC_FRO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F) &kp LS(R) &kp LS(O) &kp RET>;
            label = "AC_FRO";
        };

        AC_M2P: AC_M2P {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp N2 &kp LS(P) &kp RET>;
            label = "AC_M2P";
        };

        AC_END: AC_END {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp LS(N) &kp LS(D) &kp RET>;
            label = "AC_END";
        };

        AC_MID: AC_MID {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp LS(I) &kp LS(D) &kp RET>;
            label = "AC_MID";
        };

        AC_X: AC_X {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(DOT) &kp X &kp RET>;
            label = "AC_X";
        };

        AC_Y: AC_Y {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(DOT) &kp Y &kp RET>;
            label = "AC_Y";
        };

        D_01_16: D_01_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N0 &kp N6 &kp N2 &kp N5>;
            label = "D_01_16";
        };

        D_02_16: D_02_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N1 &kp N2 &kp N5>;
            label = "D_02_16";
        };

        D_03_16: D_03_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N1 &kp N8 &kp N7 &kp N5>;
            label = "D_03_16";
        };

        D_04_16: D_04_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N2 &kp N5>;
            label = "D_04_16";
        };

        D_05_16: D_05_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N3 &kp N1 &kp N2 &kp N5>;
            label = "D_05_16";
        };

        D_06_16: D_06_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N3 &kp N7 &kp N5>;
            label = "D_06_16";
        };

        D_07_16: D_07_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N4 &kp N3 &kp N7 &kp N5>;
            label = "D_07_16";
        };

        D_08_16: D_08_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N5>;
            label = "D_08_16";
        };

        D_09_16: D_09_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N5 &kp N6 &kp N2 &kp N5>;
            label = "D_09_16";
        };

        D_10_16: D_10_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N6 &kp N2 &kp N5>;
            label = "D_10_16";
        };

        D_11_16: D_11_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N6 &kp N8 &kp N7 &kp N5>;
            label = "D_11_16";
        };

        D_12_16: D_12_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N7 &kp N5>;
            label = "D_12_16";
        };

        D_13_16: D_13_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N8 &kp N1 &kp N2 &kp N5>;
            label = "D_13_16";
        };

        D_14_16: D_14_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N8 &kp N7 &kp N5>;
            label = "D_14_16";
        };

        D_15_16: D_15_16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp N9 &kp N3 &kp N7 &kp N5>;
            label = "D_15_16";
        };

        ENT_TO: ENT_TO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RET &to 0>;
            label = "ENT_TO";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        TH: TH {
            compatible = "zmk,behavior-hold-tap";
            label = "TH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        D_END: D_END {
            compatible = "zmk,behavior-tap-dance";
            label = "D_END";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp END>;
        };

        U_HM: U_HM {
            compatible = "zmk,behavior-tap-dance";
            label = "U_HM";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp HOME>;
        };

        BW_LEFT: BW_LEFT {
            compatible = "zmk,behavior-tap-dance";
            label = "BW_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp LG(LEFT)>;
        };

        BW_RIGHT: BW_RIGHT {
            compatible = "zmk,behavior-tap-dance";
            label = "BW_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp RG(RIGHT)>;
        };

        BW_BLOAD: BW_BLOAD {
            compatible = "zmk,behavior-tap-dance";
            label = "BW_BLOAD";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        BW_CP: BW_CP {
            compatible = "zmk,behavior-tap-dance";
            label = "BW_CP";
            #binding-cells = <0>;
            bindings = <&TH LC(A) LC(C)>, <&TH LC(X) LC(V)>;
        };

        BW_SHIFT: BW_SHIFT {
            compatible = "zmk,behavior-tap-dance";
            label = "BW_SHIFT";
            #binding-cells = <0>;
            bindings = <&TH LSHIFT SPACE>, <&kp CAPS>, <&caps_word>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&TH U ESCAPE  &none  &none  &BW_CP  &none      &TH LC(BSPC) BSPC  &none                                                      &none      &none  &none  &none      &kp MINUS  &kp EQUAL  &TH LC(BSPC) BSPC
&kp TAB       &kp Q  &kp W  &kp E   &kp R      &kp T              &none                                                      &none      &kp Y  &kp U  &kp I      &kp O      &kp P      &kp BSLH
&to 1         &kp A  &kp S  &kp D   &kp F      &kp G              &none      &kp LC(DEL)  &kp DEL      &kp LGUI   &none      &none      &kp H  &kp J  &kp K      &kp L      &kp SEMI   &kp SQT
&kp LALT      &kp Z  &kp X  &kp C   &kp V      &kp B                                      &U_HM        &BW_RIGHT                        &kp N  &kp M  &kp COMMA  &kp DOT    &kp FSLH   &none
&none         &none  &none  &sl 3   &kp LCTRL                     &BW_SHIFT  &kp RET      &D_END       &BW_LEFT   &kp ENTER  &BW_SHIFT         &none  &none      &kp LBKT   &kp RBKT   &none
            >;
        };

        keypad {
            bindings = <
&trans   &none          &none   &trans  &trans  &trans          &trans                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &TH DQT AT     &kp N7  &kp N8  &kp N9  &TH STAR FSLH   &trans                                       &trans  &trans  &trans  &trans  &trans  &trans  &trans
&to 0    &TH DOT COMMA  &kp N4  &kp N5  &kp N6  &TH PLUS MINUS  &trans  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&none    &TH RPAR LPAR  &kp N1  &kp N2  &kp N3  &kp RET                          &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&mo 2    &none          &none   &kp N0  &sl 4                   &trans  &ENT_TO  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        fn {
            bindings = <
&trans  &kp F2  &kp F3   &kp F4   &kp F16  &trans  &BW_BLOAD                                      &BW_BLOAD  &trans  &trans  &trans  &trans  &trans  &bl BL_TOG
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &none                                          &none      &trans  &trans  &trans  &trans  &trans  &bl BL_INC
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans  &none      &trans  &trans      &trans  &trans  &none      &trans  &trans  &trans  &trans  &trans  &bl BL_DEC
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans                     &trans      &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans   &trans           &trans     &trans  &trans      &trans  &trans  &trans             &trans  &trans  &trans  &trans  &bt BT_CLR
            >;
        };

        CAD {
            bindings = <
&none  &none    &none    &none    &none    &none  &none                                  &trans  &none  &none  &none  &none  &none  &none
&none  &none    &none    &none    &none    &none  &none                                  &none   &none  &none  &none  &none  &none  &none
&none  &AC_FRO  &AC_M2P  &AC_END  &AC_MID  &none  &none  &none  &none      &none  &none  &none   &none  &none  &none  &none  &none  &none
&none  &none    &AC_X    &AC_Y    &none    &none                &none      &none                 &none  &none  &none  &none  &none  &none
&none  &none    &none    &none    &none           &none  &none  &none      &none  &none  &none          &none  &none  &none  &none  &none
            >;
        };

        DEC {
            bindings = <
&none  &D_13_16  &D_14_16  &D_15_16  &none     &none  &none                                  &none  &none  &none  &none  &none  &none  &none
&none  &D_09_16  &D_10_16  &D_11_16  &D_12_16  &none  &none                                  &none  &none  &none  &none  &none  &none  &none
&none  &D_05_16  &D_06_16  &D_07_16  &D_08_16  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &D_01_16  &D_02_16  &D_03_16  &D_03_16  &none                &none      &none                &none  &none  &none  &none  &none  &none
&none  &none     &none     &none     &none            &none  &none  &none      &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
